{
  "name": "Trading Automation Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 1
            }
          ]
        }
      },
      "id": "1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/market/data",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth",
        "options": {}
      },
      "id": "2",
      "name": "Fetch Market Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/strategy/signals",
        "method": "POST",
        "body": {
          "marketData": "={{$json}}",
          "strategyId": "={{$env.STRATEGY_ID}}"
        },
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth"
      },
      "id": "3",
      "name": "Generate Trading Signals",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.signals.length}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "4",
      "name": "Has Signals?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/backtest/validate",
        "method": "POST",
        "body": {
          "signals": "={{$json.signals}}",
          "riskParameters": {
            "maxPositionSize": 0.1,
            "stopLoss": 0.05,
            "takeProfit": 0.15
          }
        },
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth"
      },
      "id": "5",
      "name": "Validate Signals",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/trading/execute",
        "method": "POST",
        "body": {
          "validatedSignals": "={{$json.validatedSignals}}",
          "executionMode": "={{$env.EXECUTION_MODE}}"
        },
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth"
      },
      "id": "6",
      "name": "Execute Trades",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1250, 200]
    },
    {
      "parameters": {
        "authentication": "webhook",
        "channel": "={{$env.SLACK_CHANNEL}}",
        "text": "=Trading Alert\\n\\n*Signals Generated:* {{$json.signals.length}}\\n*Executed Trades:* {{$json.executedTrades.length}}\\n*Total P&L:* {{$json.totalPnL}}%\\n\\nDetails: {{$json.summary}}",
        "otherOptions": {}
      },
      "id": "7",
      "name": "Send Slack Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1450, 200]
    },
    {
      "parameters": {
        "operation": "create",
        "tableId": "backtest_logs",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "timestamp",
              "fieldValue": "={{$now}}"
            },
            {
              "fieldName": "signals_count",
              "fieldValue": "={{$json.signals.length}}"
            },
            {
              "fieldName": "executed_count",
              "fieldValue": "={{$json.executedTrades.length}}"
            },
            {
              "fieldName": "performance",
              "fieldValue": "={{JSON.stringify($json.performance)}}"
            }
          ]
        }
      },
      "id": "8",
      "name": "Log to Database",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1450, 350]
    },
    {
      "parameters": {
        "fromEmail": "={{$env.FROM_EMAIL}}",
        "toEmail": "={{$env.ALERT_EMAIL}}",
        "subject": "Trading Alert - {{$now.format('YYYY-MM-DD HH:mm')}}",
        "text": "=Trading Summary:\\n\\nSignals Generated: {{$json.signals.length}}\\nExecuted Trades: {{$json.executedTrades.length}}\\n\\nPerformance:\\n- Total Return: {{$json.performance.totalReturn}}%\\n- Win Rate: {{$json.performance.winRate}}%\\n- Sharpe Ratio: {{$json.performance.sharpeRatio}}\\n\\nView details at: {{$env.DASHBOARD_URL}}"
      },
      "id": "9",
      "name": "Send Email Alert",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1650, 200]
    },
    {
      "parameters": {
        "content": "No trading signals generated",
        "respondWith": "text",
        "options": {}
      },
      "id": "10",
      "name": "No Signals Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 400]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/portfolio/rebalance",
        "method": "POST",
        "body": {
          "currentPositions": "={{$json.positions}}",
          "targetAllocation": "={{$env.TARGET_ALLOCATION}}",
          "rebalanceThreshold": 0.05
        },
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth"
      },
      "id": "11",
      "name": "Portfolio Rebalancing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [650, 500]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "daysInterval": 1,
              "triggerAtHour": 6
            }
          ]
        }
      },
      "id": "12",
      "name": "Daily Report Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 600]
    },
    {
      "parameters": {
        "url": "={{$env.API_URL}}/api/reports/daily",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerTokenAuth",
        "options": {}
      },
      "id": "13",
      "name": "Generate Daily Report",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 600]
    },
    {
      "parameters": {
        "operation": "upload",
        "binaryPropertyName": "report",
        "bucketName": "reports",
        "fileName": "=daily_report_{{$now.format('YYYY_MM_DD')}}.pdf"
      },
      "id": "14",
      "name": "Upload Report to Storage",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [650, 600]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch Market Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Market Data": {
      "main": [
        [
          {
            "node": "Generate Trading Signals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Portfolio Rebalancing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Trading Signals": {
      "main": [
        [
          {
            "node": "Has Signals?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Signals?": {
      "main": [
        [
          {
            "node": "Validate Signals",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Signals Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Signals": {
      "main": [
        [
          {
            "node": "Execute Trades",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Trades": {
      "main": [
        [
          {
            "node": "Send Slack Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log to Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Email Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Report Trigger": {
      "main": [
        [
          {
            "node": "Generate Daily Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Daily Report": {
      "main": [
        [
          {
            "node": "Upload Report to Storage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error-handler-workflow"
  },
  "staticData": null,
  "tags": [
    {
      "name": "trading",
      "createdAt": "2025-09-01T00:00:00.000Z"
    },
    {
      "name": "automation",
      "createdAt": "2025-09-01T00:00:00.000Z"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-09-13T00:00:00.000Z",
  "versionId": "1"
}